local v0 = tonumber
local v1 = string.byte
local v2 = string.char
local v3 = string.sub
local v4 = string.gsub
local v5 = string.rep
local v6 = table.concat
local v7 = table.insert
local v8 = math.ldexp
local v9 = getfenv or function()
		return _ENV
	end
local v10 = setmetatable
local v11 = pcall
local v12 = select
local v13 = unpack or table.unpack
local v14 = tonumber
local function v15(v16, v17, ...)
	local v18 = 1
	local v19
	v16 =
		v4(
		v3(v16, 5),
		"..",
		function(v30)
			if (v1(v30, 2) == 79) then
				local v82 = 0
				while true do
					if (v82 == 0) then
						v19 = v0(v3(v30, 1, 1))
						return ""
					end
				end
			else
				local v83 = v2(v0(v30, 16))
				if v19 then
					local v90 = v5(v83, v19)
					v19 = nil
					return v90
				else
					return v83
				end
			end
		end
	)
	local function v20(v31, v32, v33)
		if v33 then
			local v84 =
				(v31 / ((5 - (3 + 0)) ^ (v32 - 1))) %
				(2 ^ (((v33 - ((2 - 0) - 1)) - (v32 - ((1638 - (1523 + 114)) - (1065 - (68 + 997))))) + (2 - 1)))
			return v84 - (v84 % (620 - (555 + 64)))
		else
			local v85 = 931 - (857 + (1344 - (226 + 1044)))
			local v86
			while true do
				if (v85 == ((2473 - 1905) - (367 + 201))) then
					v86 = (929 - (214 + 713)) ^ (v32 - (1 + 0))
					return (((v31 % (v86 + v86)) >= v86) and (1 + 0)) or (877 - (282 + 595))
				end
			end
		end
	end
	local function v21()
		local v34 = 117 - (32 + 85)
		local v35
		while true do
			if (v34 == (0 + 0)) then
				v35 = v1(v16, v18, v18)
				v18 = v18 + 1 + 0
				v34 = 958 - (892 + (120 - 55))
			end
			if (v34 == ((3 - 1) - 1)) then
				return v35
			end
		end
	end
	local function v22()
		local v36 = 350 - ((345 - 258) + 263)
		local v37
		local v38
		while true do
			if (v36 == 1) then
				return (v38 * (436 - (67 + (1065 - (802 + 150))))) + v37
			end
			if (v36 == (0 + 0)) then
				v37, v38 = v1(v16, v18, v18 + 2)
				v18 = v18 + (4 - 2)
				v36 = 1 + 0
			end
		end
	end
	local function v23()
		local v39 = 0 - 0
		local v40
		local v41
		local v42
		local v43
		while true do
			if (v39 == (1 - 0)) then
				return (v43 * 16777216) + (v42 * 65536) + (v41 * (187 + 69)) + v40
			end
			if (v39 == (997 - (915 + 82))) then
				v40, v41, v42, v43 = v1(v16, v18, v18 + ((1195 - (1069 + 118)) - 5))
				v18 = v18 + 3 + 1
				v39 = 1 - 0
			end
		end
	end
	local function v24()
		local v44 = v23()
		local v45 = v23()
		local v46 = 2 - (3 - 2)
		local v47 = (v20(v45, 1 - (0 - 0), 4 + 16) * ((3 - 1) ^ 32)) + v44
		local v48 = v20(v45, 21 + 0, 822 - (368 + 423))
		local v49 = ((v20(v45, 100 - (4 + 64)) == (19 - (10 + 8))) and -((2 + 1) - 2)) or ((1328 - (261 + 624)) - (416 + 26))
		if (v48 == 0) then
			if (v47 == (0 - 0)) then
				return v49 * (0 + 0)
			else
				local v91 = 0 - 0
				while true do
					if (v91 == (438 - (145 + 293))) then
						v48 = 431 - (44 + 386)
						v46 = 1486 - (998 + 488)
						break
					end
				end
			end
		elseif (v48 == (651 + (4957 - 3561))) then
			return ((v47 == (0 + 0)) and (v49 * ((773 - (201 + 571)) / 0))) or (v49 * NaN)
		end
		return v8(v49, v48 - (2161 - (116 + (1881 - (814 + 45))))) * (v46 + (v47 / ((8 - 6) ^ (31 + 21))))
	end
	local function v25(v50)
		local v51 = 0 - 0
		local v52
		local v53
		while true do
			if (v51 == (1080 - (1020 + 60))) then
				v52 = nil
				if not v50 then
					local v99 = 1423 - ((2471 - 1841) + 793)
					while true do
						if (v99 == (0 - 0)) then
							v50 = v23()
							if (v50 == 0) then
								return ""
							end
							break
						end
					end
				end
				v51 = 4 - 3
			end
			if (v51 == (1 + 0 + 0)) then
				v52 = v3(v16, v18, (v18 + v50) - (1 + 0))
				v18 = v18 + v50
				v51 = 6 - 4
			end
			if ((1749 - (262 + 498 + 987)) == v51) then
				v53 = {}
				for v92 = 1, #v52 do
					v53[v92] = v2(v1(v3(v52, v92, v92)))
				end
				v51 = 1916 - (1789 + 124)
			end
			if (v51 == (769 - (745 + (57 - 36)))) then
				return v6(v53)
			end
		end
	end
	local v26 = v23
	local function v27(...)
		return {...}, v12("#", ...)
	end
	local function v28()
		local v54 = 0
		local v55
		local v56
		local v57
		local v58
		local v59
		local v60
		local v61
		while true do
			if (v54 == (0 - 0)) then
				v55 = 0
				v56 = nil
				v54 = 3 - 2
			end
			if ((868 - (550 + 317)) == v54) then
				v57 = nil
				v58 = nil
				v54 = 2 - 0
			end
			if (v54 ~= (3 - 0)) then
			else
				v61 = nil
				while true do
					local v94 = 0
					while true do
						if (v94 == (2 - 1)) then
							if (v55 ~= 0) then
							else
								local v101 = 285 - (134 + 151)
								while true do
									if (v101 == (1665 - (970 + 695))) then
										v56 = {}
										v57 = {}
										v101 = 1 - 0
									end
									if (v101 == 1) then
										v58 = {}
										v59 = {v56, v57, nil, v58}
										v101 = 2
									end
									if (v101 == (6 - 4)) then
										v55 = 1
										break
									end
								end
							end
							break
						end
						if (v94 == 0) then
							local v100 = 0 - 0
							while true do
								if (0 ~= v100) then
								else
									if (v55 ~= (7 - 5)) then
									else
										local v102 = 0
										while true do
											if (v102 == (1824 - (1195 + 629))) then
												for v237 = 1, v23() do
													local v238 = 0 - 0
													local v239
													while true do
														if (0 ~= v238) then
														else
															v239 = v21()
															if (v20(v239, 1, 1) == (241 - (187 + 54))) then
																local v326 = 780 - (162 + 618)
																local v327
																local v328
																local v329
																local v330
																while true do
																	if (v326 == (2 + 0)) then
																		while true do
																			if (v327 ~= 0) then
																			else
																				local v364 = 0 + 0
																				local v365
																				while true do
																					if (v364 == (0 - 0)) then
																						v365 = 0 - 0
																						while true do
																							if (v365 == 0) then
																								local v380 = 0
																								while true do
																									if (v380 == (1 + 0)) then
																										v365 = 1
																										break
																									end
																									if (v380 == 0) then
																										v328 = v20(v239, 1638 - (1373 + 263), 3)
																										v329 = v20(v239, 4, 6)
																										v380 = 1001 - (451 + 549)
																									end
																								end
																							end
																							if (v365 ~= (1 + 0)) then
																							else
																								v327 = 1 - 0
																								break
																							end
																						end
																						break
																					end
																				end
																			end
																			if (v327 == 3) then
																				if (v20(v329, 3, 3) ~= (1 - 0)) then
																				else
																					v330[1388 - (746 + 638)] = v61[v330[2 + 2]]
																				end
																				v56[v237] = v330
																				break
																			end
																			if (v327 == (1 - 0)) then
																				v330 = {v22(), v22(), nil, nil}
																				if (v328 == 0) then
																					local v373 = 0 + 0
																					local v374
																					while true do
																						if (v373 ~= 0) then
																						else
																							v374 = 0
																							while true do
																								if (v374 ~= 0) then
																								else
																									v330[563 - (306 + 254)] = v22()
																									v330[1 + 3] = v22()
																									break
																								end
																							end
																							break
																						end
																					end
																				elseif (v328 == (1 - 0)) then
																					v330[3] = v23()
																				elseif (v328 == (1469 - (899 + 568))) then
																					v330[2 + 1] = v23() - ((4 - 2) ^ (619 - (268 + 335)))
																				elseif (v328 == (293 - (60 + 230))) then
																					local v384 = 572 - (426 + 146)
																					local v385
																					while true do
																						if (v384 ~= 0) then
																						else
																							v385 = 0 + 0
																							while true do
																								if (0 == v385) then
																									v330[3] = v23() - (2 ^ 16)
																									v330[4] = v22()
																									break
																								end
																							end
																							break
																						end
																					end
																				end
																				v327 = 2
																			end
																			if (v327 ~= 2) then
																			else
																				local v367 = 1456 - (282 + 1174)
																				while true do
																					if (v367 == 1) then
																						v327 = 814 - (569 + 242)
																						break
																					end
																					if (v367 == (0 - 0)) then
																						if (v20(v329, 1 + 0, 1025 - (706 + 318)) ~= 1) then
																						else
																							v330[2] = v61[v330[2]]
																						end
																						if (v20(v329, 1253 - (721 + 530), 1273 - (945 + 326)) ~= (2 - 1)) then
																						else
																							v330[3] = v61[v330[3 + 0]]
																						end
																						v367 = 1
																					end
																				end
																			end
																		end
																		break
																	end
																	if (v326 == (701 - (271 + 429))) then
																		v329 = nil
																		v330 = nil
																		v326 = 2 + 0
																	end
																	if (v326 == 0) then
																		v327 = 1500 - (1408 + 92)
																		v328 = nil
																		v326 = 1087 - (461 + 625)
																	end
																end
															end
															break
														end
													end
												end
												for v240 = 1289 - (993 + 295), v23() do
													v57[v240 - (1 + 0)] = v28()
												end
												v102 = 1
											end
											if (v102 ~= (1172 - (418 + 753))) then
											else
												return v59
											end
										end
									end
									if (1 == v55) then
										v60 = v23()
										v61 = {}
										for v118 = 1, v60 do
											local v119 = 0
											local v120
											local v121
											local v122
											while true do
												if (v119 ~= 1) then
												else
													v122 = nil
													while true do
														if (v120 ~= 0) then
														else
															local v312 = 0
															while true do
																if (v312 ~= 0) then
																else
																	v121 = v21()
																	v122 = nil
																	v312 = 1
																end
																if (1 == v312) then
																	v120 = 1 + 0
																	break
																end
															end
														end
														if (v120 ~= (1 + 0)) then
														else
															if (v121 == 1) then
																v122 = v21() ~= 0
															elseif (v121 == (1 + 1)) then
																v122 = v24()
															elseif (v121 ~= (1 + 2)) then
															else
																v122 = v25()
															end
															v61[v118] = v122
															break
														end
													end
													break
												end
												if (v119 ~= (529 - (406 + 123))) then
												else
													v120 = 0
													v121 = nil
													v119 = 1770 - (1749 + 20)
												end
											end
										end
										v59[3] = v21()
										v55 = 1 + 1
									end
									v100 = 1323 - (1249 + 73)
								end
								if (v100 == (1 + 0)) then
									v94 = 1146 - (466 + 679)
									break
								end
							end
						end
					end
				end
				break
			end
			if ((4 - 2) == v54) then
				v59 = nil
				v60 = nil
				v54 = 8 - 5
			end
		end
	end
	local function v29(v62, v63, v64)
		local v65 = v62[1]
		local v66 = v62[2]
		local v67 = v62[3]
		return function(...)
			local v68 = v65
			local v69 = v66
			local v70 = v67
			local v71 = v27
			local v72 = 1
			local v73 = -1
			local v74 = {}
			local v75 = {...}
			local v76 = v12("#", ...) - 1
			local v77 = {}
			local v78 = {}
			for v87 = 0, v76 do
				if (v87 >= v70) then
					v74[v87 - v70] = v75[v87 + 1]
				else
					v78[v87] = v75[v87 + 1]
				end
			end
			local v79 = (v76 - v70) + 1
			local v80
			local v81
			while true do
				v80 = v68[v72]
				v81 = v80[1]
				if (v81 <= 28) then
					if (v81 <= 13) then
						if (v81 <= 6) then
							if (v81 <= 2) then
								if (v81 <= 0) then
									v78[v80[2]]()
								elseif (v81 > 1) then
									local v123 = 0
									local v124
									local v125
									while true do
										if (v123 == 0) then
											v124 = v80[2]
											v125 = {}
											v123 = 1
										end
										if (v123 == 1) then
											for v272 = 1, #v77 do
												local v273 = v77[v272]
												for v314 = 0, #v273 do
													local v315 = v273[v314]
													local v316 = v315[1]
													local v317 = v315[2]
													if ((v316 == v78) and (v317 >= v124)) then
														v125[v317] = v316[v317]
														v315[1] = v125
													end
												end
											end
											break
										end
									end
								else
									v78[v80[2]] = {}
								end
							elseif (v81 <= 4) then
								if (v81 > 3) then
									v78[v80[2]] = v80[3] + v78[v80[4]]
								else
									local v128 = v80[2]
									local v129 = v78[v80[3]]
									v78[v128 + 1] = v129
									v78[v128] = v129[v80[4]]
								end
							elseif (v81 == 5) then
								local v133 = 0
								local v134
								while true do
									if (v133 == 0) then
										v134 = v80[2]
										do
											return v78[v134](v13(v78, v134 + 1, v80[3]))
										end
										break
									end
								end
							else
								local v135 = 0
								local v136
								local v137
								while true do
									if (0 == v135) then
										v136 = v80[2]
										v137 = {}
										v135 = 1
									end
									if (v135 == 1) then
										for v274 = 1, #v77 do
											local v275 = 0
											local v276
											while true do
												if (v275 == 0) then
													v276 = v77[v274]
													for v346 = 0, #v276 do
														local v347 = 0
														local v348
														local v349
														local v350
														while true do
															if (v347 == 0) then
																v348 = v276[v346]
																v349 = v348[1]
																v347 = 1
															end
															if (v347 == 1) then
																v350 = v348[2]
																if ((v349 == v78) and (v350 >= v136)) then
																	v137[v350] = v349[v350]
																	v348[1] = v137
																end
																break
															end
														end
													end
													break
												end
											end
										end
										break
									end
								end
							end
						elseif (v81 <= 9) then
							if (v81 <= 7) then
								v72 = v80[3]
							elseif (v81 == 8) then
								v78[v80[2]] = v78[v80[3]] + v80[4]
							else
								local v139 = 0
								local v140
								local v141
								local v142
								while true do
									if (v139 == 2) then
										if (v141 > 0) then
											if (v142 <= v78[v140 + 1]) then
												local v335 = 0
												while true do
													if (0 == v335) then
														v72 = v80[3]
														v78[v140 + 3] = v142
														break
													end
												end
											end
										elseif (v142 >= v78[v140 + 1]) then
											local v336 = 0
											while true do
												if (v336 == 0) then
													v72 = v80[3]
													v78[v140 + 3] = v142
													break
												end
											end
										end
										break
									end
									if (v139 == 1) then
										v142 = v78[v140] + v141
										v78[v140] = v142
										v139 = 2
									end
									if (v139 == 0) then
										v140 = v80[2]
										v141 = v78[v140 + 2]
										v139 = 1
									end
								end
							end
						elseif (v81 <= 11) then
							if (v81 > 10) then
								if (v78[v80[2]] == v80[4]) then
									v72 = v72 + 1
								else
									v72 = v80[3]
								end
							else
								v78[v80[2]] = v78[v80[3]][v80[4]]
							end
						elseif (v81 == 12) then
							v78[v80[2]] = v78[v80[3]] % v80[4]
						else
							local v146 = v80[2]
							v78[v146] = v78[v146](v13(v78, v146 + 1, v73))
						end
					elseif (v81 <= 20) then
						if (v81 <= 16) then
							if (v81 <= 14) then
								v78[v80[2]] = v78[v80[3]][v80[4]]
							elseif (v81 > 15) then
								local v148 = v80[2]
								local v149 = v78[v148]
								local v150 = v78[v148 + 2]
								if (v150 > 0) then
									if (v149 > v78[v148 + 1]) then
										v72 = v80[3]
									else
										v78[v148 + 3] = v149
									end
								elseif (v149 < v78[v148 + 1]) then
									v72 = v80[3]
								else
									v78[v148 + 3] = v149
								end
							else
								v78[v80[2]] = v78[v80[3]] % v80[4]
							end
						elseif (v81 <= 18) then
							if (v81 > 17) then
								local v152 = 0
								local v153
								local v154
								local v155
								while true do
									if (v152 == 1) then
										v155 = v78[v153] + v154
										v78[v153] = v155
										v152 = 2
									end
									if (2 == v152) then
										if (v154 > 0) then
											if (v155 <= v78[v153 + 1]) then
												local v337 = 0
												while true do
													if (v337 == 0) then
														v72 = v80[3]
														v78[v153 + 3] = v155
														break
													end
												end
											end
										elseif (v155 >= v78[v153 + 1]) then
											local v338 = 0
											while true do
												if (v338 == 0) then
													v72 = v80[3]
													v78[v153 + 3] = v155
													break
												end
											end
										end
										break
									end
									if (v152 == 0) then
										v153 = v80[2]
										v154 = v78[v153 + 2]
										v152 = 1
									end
								end
							else
								v72 = v80[3]
							end
						elseif (v81 > 19) then
							v78[v80[2]] = #v78[v80[3]]
						else
							v78[v80[2]] = #v78[v80[3]]
						end
					elseif (v81 <= 24) then
						if (v81 <= 22) then
							if (v81 > 21) then
								v78[v80[2]] = v63[v80[3]]
							elseif not v78[v80[2]] then
								v72 = v72 + 1
							else
								v72 = v80[3]
							end
						elseif (v81 == 23) then
							v78[v80[2]] = v78[v80[3]]
						else
							v78[v80[2]] = v78[v80[3]]
						end
					elseif (v81 <= 26) then
						if (v81 == 25) then
							v78[v80[2]] = v64[v80[3]]
						else
							local v167 = 0
							local v168
							local v169
							local v170
							while true do
								if (v167 == 0) then
									v168 = v69[v80[3]]
									v169 = nil
									v167 = 1
								end
								if (v167 == 1) then
									v170 = {}
									v169 =
										v10(
										{},
										{
											__index = function(v281, v282)
												local v283 = 0
												local v284
												while true do
													if (0 == v283) then
														v284 = v170[v282]
														return v284[1][v284[2]]
													end
												end
											end,
											__newindex = function(v285, v286, v287)
												local v288 = 0
												local v289
												while true do
													if (v288 == 0) then
														v289 = v170[v286]
														v289[1][v289[2]] = v287
														break
													end
												end
											end
										}
									)
									v167 = 2
								end
								if (v167 == 2) then
									for v290 = 1, v80[4] do
										local v291 = 0
										local v292
										while true do
											if (v291 == 0) then
												v72 = v72 + 1
												v292 = v68[v72]
												v291 = 1
											end
											if (v291 == 1) then
												if (v292[1] == 24) then
													v170[v290 - 1] = {v78, v292[3]}
												else
													v170[v290 - 1] = {v63, v292[3]}
												end
												v77[#v77 + 1] = v170
												break
											end
										end
									end
									v78[v80[2]] = v29(v168, v169, v64)
									break
								end
							end
						end
					elseif (v81 == 27) then
						local v171 = v80[2]
						local v172, v173 = v71(v78[v171](v13(v78, v171 + 1, v73)))
						v73 = (v173 + v171) - 1
						local v174 = 0
						for v220 = v171, v73 do
							v174 = v174 + 1
							v78[v220] = v172[v174]
						end
					else
						for v223 = v80[2], v80[3] do
							v78[v223] = nil
						end
					end
				elseif (v81 <= 42) then
					if (v81 <= 35) then
						if (v81 <= 31) then
							if (v81 <= 29) then
								local v107 = 0
								local v108
								local v109
								local v110
								local v111
								while true do
									if (v107 == 1) then
										v73 = (v110 + v108) - 1
										v111 = 0
										v107 = 2
									end
									if (2 == v107) then
										for v244 = v108, v73 do
											local v245 = 0
											while true do
												if (v245 == 0) then
													v111 = v111 + 1
													v78[v244] = v109[v111]
													break
												end
											end
										end
										break
									end
									if (0 == v107) then
										v108 = v80[2]
										v109, v110 = v71(v78[v108](v13(v78, v108 + 1, v73)))
										v107 = 1
									end
								end
							elseif (v81 > 30) then
								local v175 = v80[2]
								do
									return v13(v78, v175, v73)
								end
							else
								local v176 = 0
								local v177
								local v178
								local v179
								local v180
								while true do
									if (v176 == 2) then
										for v293 = v177, v73 do
											local v294 = 0
											while true do
												if (v294 == 0) then
													v180 = v180 + 1
													v78[v293] = v178[v180]
													break
												end
											end
										end
										break
									end
									if (v176 == 0) then
										v177 = v80[2]
										v178, v179 = v71(v78[v177](v13(v78, v177 + 1, v80[3])))
										v176 = 1
									end
									if (v176 == 1) then
										v73 = (v179 + v177) - 1
										v180 = 0
										v176 = 2
									end
								end
							end
						elseif (v81 <= 33) then
							if (v81 > 32) then
								local v181 = 0
								local v182
								local v183
								local v184
								while true do
									if (v181 == 2) then
										for v295 = 1, v80[4] do
											v72 = v72 + 1
											local v296 = v68[v72]
											if (v296[1] == 24) then
												v184[v295 - 1] = {v78, v296[3]}
											else
												v184[v295 - 1] = {v63, v296[3]}
											end
											v77[#v77 + 1] = v184
										end
										v78[v80[2]] = v29(v182, v183, v64)
										break
									end
									if (v181 == 1) then
										v184 = {}
										v183 =
											v10(
											{},
											{
												__index = function(v298, v299)
													local v300 = v184[v299]
													return v300[1][v300[2]]
												end,
												__newindex = function(v301, v302, v303)
													local v304 = v184[v302]
													v304[1][v304[2]] = v303
												end
											}
										)
										v181 = 2
									end
									if (v181 == 0) then
										v182 = v69[v80[3]]
										v183 = nil
										v181 = 1
									end
								end
							else
								v78[v80[2]] = v78[v80[3]] % v78[v80[4]]
							end
						elseif (v81 > 34) then
							v78[v80[2]] = v63[v80[3]]
						else
							local v188 = v80[2]
							v78[v188](v13(v78, v188 + 1, v73))
						end
					elseif (v81 <= 38) then
						if (v81 <= 36) then
							v78[v80[2]] = v80[3]
						elseif (v81 == 37) then
							v78[v80[2]] = v80[3]
						else
							local v191 = v80[2]
							local v192, v193 = v71(v78[v191](v78[v191 + 1]))
							v73 = (v193 + v191) - 1
							local v194 = 0
							for v226 = v191, v73 do
								local v227 = 0
								while true do
									if (v227 == 0) then
										v194 = v194 + 1
										v78[v226] = v192[v194]
										break
									end
								end
							end
						end
					elseif (v81 <= 40) then
						if (v81 > 39) then
							v78[v80[2]] = v80[3] + v78[v80[4]]
						else
							local v196 = v80[2]
							local v197, v198 = v71(v78[v196](v13(v78, v196 + 1, v80[3])))
							v73 = (v198 + v196) - 1
							local v199 = 0
							for v228 = v196, v73 do
								local v229 = 0
								while true do
									if (v229 == 0) then
										v199 = v199 + 1
										v78[v228] = v197[v199]
										break
									end
								end
							end
						end
					elseif (v81 > 41) then
						local v200 = 0
						local v201
						while true do
							if (v200 == 0) then
								v201 = v80[2]
								v78[v201](v13(v78, v201 + 1, v73))
								break
							end
						end
					else
						local v202 = 0
						local v203
						while true do
							if (v202 == 0) then
								v203 = v80[2]
								do
									return v13(v78, v203, v73)
								end
								break
							end
						end
					end
				elseif (v81 <= 49) then
					if (v81 <= 45) then
						if (v81 <= 43) then
							local v114 = 0
							local v115
							local v116
							local v117
							while true do
								if (0 == v114) then
									v115 = v80[2]
									v116 = v78[v115]
									v114 = 1
								end
								if (v114 == 1) then
									v117 = v78[v115 + 2]
									if (v117 > 0) then
										if (v116 > v78[v115 + 1]) then
											v72 = v80[3]
										else
											v78[v115 + 3] = v116
										end
									elseif (v116 < v78[v115 + 1]) then
										v72 = v80[3]
									else
										v78[v115 + 3] = v116
									end
									break
								end
							end
						elseif (v81 > 44) then
							do
								return
							end
						else
							local v204 = 0
							local v205
							local v206
							while true do
								if (v204 == 0) then
									v205 = v80[2]
									v206 = v78[v80[3]]
									v204 = 1
								end
								if (v204 == 1) then
									v78[v205 + 1] = v206
									v78[v205] = v206[v80[4]]
									break
								end
							end
						end
					elseif (v81 <= 47) then
						if (v81 == 46) then
							local v207 = 0
							local v208
							while true do
								if (v207 == 0) then
									v208 = v80[2]
									v78[v208] = v78[v208](v13(v78, v208 + 1, v73))
									break
								end
							end
						else
							for v233 = v80[2], v80[3] do
								v78[v233] = nil
							end
						end
					elseif (v81 == 48) then
						v78[v80[2]] = {}
					elseif (v78[v80[2]] == v80[4]) then
						v72 = v72 + 1
					else
						v72 = v80[3]
					end
				elseif (v81 <= 53) then
					if (v81 <= 51) then
						if (v81 == 50) then
							if not v78[v80[2]] then
								v72 = v72 + 1
							else
								v72 = v80[3]
							end
						else
							v78[v80[2]] = v78[v80[3]] + v80[4]
						end
					elseif (v81 == 52) then
						v78[v80[2]] = v64[v80[3]]
					else
						local v213 = v80[2]
						local v214, v215 = v71(v78[v213](v78[v213 + 1]))
						v73 = (v215 + v213) - 1
						local v216 = 0
						for v235 = v213, v73 do
							local v236 = 0
							while true do
								if (v236 == 0) then
									v216 = v216 + 1
									v78[v235] = v214[v216]
									break
								end
							end
						end
					end
				elseif (v81 <= 55) then
					if (v81 == 54) then
						do
							return
						end
					else
						local v217 = 0
						local v218
						while true do
							if (v217 == 0) then
								v218 = v80[2]
								do
									return v78[v218](v13(v78, v218 + 1, v80[3]))
								end
								break
							end
						end
					end
				elseif (v81 > 56) then
					v78[v80[2]]()
				else
					v78[v80[2]] = v78[v80[3]] % v78[v80[4]]
				end
				v72 = v72 + 1
			end
		end
	end
	return v29(v28(), {}, v17)(...)
end
return v15(
	
	v9(),
	...
)
